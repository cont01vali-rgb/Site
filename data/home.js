/*************************************************
 * HOME.JS - Dashboard logic pentru pagina principalƒÉ
 *************************************************/

window.homeData = {
    // Mesaje motiva»õionale
    welcomeMessages: {
        ro: [
            'BunƒÉ ziua! Gata sƒÉ √ÆnvƒÉ»õƒÉm germana? üá©üá™',
            'Willkommen! Hai sƒÉ continuƒÉm! üìö',
            'Excelent! SƒÉ facem progrese astƒÉzi! üí™',
            'Guten Tag! Timpul pentru o nouƒÉ lec»õie! ‚è∞'
        ],
        en: [
            'Good day! Ready to learn German? üá©üá™',
            'Willkommen! Let\'s continue! üìö',
            'Excellent! Let\'s make progress today! üí™',
            'Guten Tag! Time for a new lesson! ‚è∞'
        ],
        ua: [
            '–î–æ–±—Ä–∏–π –¥–µ–Ω—å! –ì–æ—Ç–æ–≤—ñ –≤–∏–≤—á–∞—Ç–∏ –Ω—ñ–º–µ—Ü—å–∫—É? üá©üá™',
            'Willkommen! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–∏–º–æ! üìö',
            '–ß—É–¥–æ–≤–æ! –†–æ–±–∏–º–æ –ø—Ä–æ–≥—Ä–µ—Å —Å—å–æ–≥–æ–¥–Ω—ñ! üí™',
            'Guten Tag! –ß–∞—Å –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—Ä–æ–∫—É! ‚è∞'
        ]
    }
};

class HomePage {
    constructor() {
        this.currentLang = localStorage.getItem('selectedLanguage') || 'ro';
        this.init();
    }

    init() {
        this.updateWelcomeMessage();
        this.renderQuickActions();
        this.addCardAnimations();
        this.startTypingAnimation();
        
        // Event listener pentru schimbarea limbii
        document.addEventListener('languageChanged', () => {
            this.currentLang = localStorage.getItem('selectedLanguage') || 'ro';
            this.updateWelcomeMessage();
            this.renderQuickActions();
        });
    }

    updateWelcomeMessage() {
        const messages = window.homeData.welcomeMessages[this.currentLang];
        const randomMessage = messages[Math.floor(Math.random() * messages.length)];
        
        const messageElement = document.getElementById('welcome-message');
        if (messageElement) {
            messageElement.textContent = randomMessage;
            messageElement.style.opacity = '0';
            setTimeout(() => {
                messageElement.style.opacity = '1';
            }, 100);
        }
    }

    renderStats() {
        const statsContainer = document.getElementById('stats-container');
        if (!statsContainer) return;

        statsContainer.innerHTML = `
            <div class="stat-card">
                <div class="stat-number">${this.stats.lessonsCompleted}</div>
                <div class="stat-label">Lec»õii</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">${this.stats.testsCompleted}</div>
                <div class="stat-label">Teste</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">${this.stats.currentStreak}</div>
                <div class="stat-label">Zile</div>
            </div>
        `;
    }

    renderQuickActions() {
        const actionsContainer = document.getElementById('quick-actions');
        if (!actionsContainer) return;

        const getTranslation = (key, fallback) => {
            if (window.translationSystem) {
                return window.translationSystem.t(key) || fallback;
            }
            return fallback;
        };

        const continueTitle = getTranslation('home.continue_lesson', 'ContinuƒÉ Lec»õia');
        const continueSubtitle = getTranslation('home.continue_subtitle', 'Das deutsche Alphabet');
        const dailyTitle = getTranslation('home.daily_challenge', 'Provocarea Zilei');
        const dailySubtitle = getTranslation('home.daily_subtitle', '5 √ÆntrebƒÉri rapide');

        const actionsHTML = `
            <div class="quick-action" onclick="location.href='lessons/lesson1.html'">
                <div class="action-icon">‚ñ∂Ô∏è</div>
                <div class="action-content">
                    <div class="action-title">${continueTitle}</div>
                    <div class="action-subtitle">${continueSubtitle}</div>
                </div>
            </div>
            <div class="quick-action" onclick="location.href='tests/vocabulary-test.html'">
                <div class="action-icon">‚ö°</div>
                <div class="action-content">
                    <div class="action-title">${dailyTitle}</div>
                    <div class="action-subtitle">${dailySubtitle}</div>
                </div>
            </div>
        `;

        actionsContainer.innerHTML = actionsHTML;
    }

    addCardAnimations() {
        const cards = document.querySelectorAll('.card, .quick-action');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.1}s`;
            card.classList.add('fade-in-up');
            
            card.addEventListener('mouseenter', () => {
                card.style.transform = 'translateY(-8px) scale(1.02)';
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'translateY(0) scale(1)';
            });
        });
    }

    startTypingAnimation() {
        const titleElement = document.querySelector('[data-i18n="home.title"]');
        if (!titleElement) return;

        const text = titleElement.textContent;
        titleElement.textContent = '';
        titleElement.style.borderRight = '2px solid #333';
        
        let i = 0;
        const typing = setInterval(() => {
            titleElement.textContent += text.charAt(i);
            i++;
            if (i >= text.length) {
                clearInterval(typing);
                setTimeout(() => {
                    titleElement.style.borderRight = 'none';
                }, 1000);
            }
        }, 100);
    }
}

// Ini»õializeazƒÉ c√¢nd DOM-ul este √ÆncƒÉrcat
document.addEventListener('DOMContentLoaded', () => {
    window.homePage = new HomePage();
});