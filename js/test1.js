/********************************************
 * TEST1.JS ‚Äì Logica testului pentru lec»õia 1
 ********************************************/

const questions = [
  { type: "truefalse", question: "Umlautul ‚Äû√§‚Äù se pronun»õƒÉ aproximativ ca ‚Äûe‚Äù √Æn limba germanƒÉ.", correct: true },
  { type: "truefalse", question: "Litera ‚Äû√ü‚Äù existƒÉ »ôi ca majusculƒÉ √Æn alfabetul german.", correct: false },
  { type: "truefalse", question: "Dublul vocal ‚Äûie‚Äù se cite»ôte ca un ‚Äûi‚Äù lung.", correct: true },
  { type: "truefalse", question: "‚Äû√∂‚Äù se pronun»õƒÉ ca ‚Äûo‚Äù normal.", correct: false },
  { type: "multiple", question: "Cuv√¢ntul ‚Äûdas √ñl‚Äù con»õine:", options: ["√§", "√∂", "√º"], correct: "√∂" },
  { type: "multiple", question: "Care cuv√¢nt con»õine ‚Äû√ü‚Äù?", options: ["Stra√üe", "K√§se", "Suppe"], correct: "Stra√üe" },
  { type: "fill", question: "Cuv√¢ntul ‚Äûdie L√∂sung‚Äù con»õine Umlautul:", correct: "√∂" },
  { type: "multiple", question: "√én cuv√¢ntul ‚Äûbitten‚Äù, consoana dublƒÉ ‚Äûtt‚Äù se pronun»õƒÉ:", options: ["prelungit", "scurt, rapid", "moale"], correct: "scurt, rapid" },
  { type: "multiple", question: "‚ÄûDer Staat‚Äù se pronun»õƒÉ cu ‚Äûst‚Äù ca:", options: ["st", "»ôt", "s + t"], correct: "»ôt" },
  { type: "fill", question: "√én germanƒÉ, numele proprii »ôi denumirile de »õƒÉri se scriu cu:", correct: "Majuscula" },
  { type: "truefalse", question: "Litera germanƒÉ ‚Äû√ü‚Äù se cite»ôte ca douƒÉ s-uri (ss).", correct: true },
  { type: "truefalse", question: "‚Äû√ñsterreich‚Äù con»õine Umlautul ‚Äû√∂‚Äù.", correct: true },
  { type: "truefalse", question: "Umlautul ‚Äû√º‚Äù se pronun»õƒÉ la fel ca ‚Äûu‚Äù.", correct: false },
  { type: "multiple", question: "Care cuv√¢nt con»õine Umlautul ‚Äû√§‚Äù?", options: ["der K√§se", "das Haus", "die Sonne"], correct: "der K√§se" },
  { type: "multiple", question: "Care dintre urmƒÉtoarele cuvinte are diftongul ‚Äûeu‚Äù?", options: ["Leute", "B√§ume", "Mai"], correct: "Leute" },
  { type: "multiple", question: "√én ce cuv√¢nt se pronun»õƒÉ ‚Äûst‚Äù ca ‚Äû»ôt‚Äù?", options: ["Stein", "Mitte", "Haus"], correct: "Stein" },
  { type: "fill", question: "CompleteazƒÉ: Cuv√¢ntul ‚Äûdie L√∂sung‚Äù con»õine Umlautul ____.", correct: "√∂" },
  { type: "fill", question: "CompleteazƒÉ: √én germanƒÉ, toate substantivele se scriu cu literƒÉ ____.", correct: "mare" },
  { type: "fill", question: "Cum se pronun»õƒÉ combina»õia ‚Äûsch‚Äù √Æn cuv√¢ntul ‚ÄûSchule‚Äù?", correct: "»ô" },
  { type: "multiple", question: "Ce √ÆnseamnƒÉ cuv√¢ntul ‚ÄûGro√üschreibung‚Äù?", options: ["Scriere cu majusculƒÉ", "Scriere cu litere mici", "Scriere foneticƒÉ"], correct: "Scriere cu majusculƒÉ" },

  // 3 √ÆntrebƒÉri audio
  { type: "audio", question: "AscultƒÉ »ôi alege cuv√¢ntul corect:", word: "Apfel", options: ["Apfel", "Apfeln", "√Ñpfel"], correct: "Apfel" },
  { type: "audio", question: "AscultƒÉ »ôi alege cuv√¢ntul corect:", word: "Stra√üe", options: ["Stra√üe", "Strase", "Strasse"], correct: "Stra√üe" },
  { type: "audio", question: "AscultƒÉ »ôi alege cuv√¢ntul corect:", word: "B√§ume", options: ["B√§ume", "Baume", "B√§umer"], correct: "B√§ume" }

];

let current = 0;
let shuffled = [];
let selectedAnswer = null;

// AmestecƒÉ √ÆntrebƒÉrile
function shuffle(arr) {
  return arr.sort(() => Math.random() - 0.5);
}

document.addEventListener("DOMContentLoaded", () => {
  shuffled = shuffle(questions);
  showQuestion();

  document.getElementById("verify-btn").addEventListener("click", verifyAnswer);
  document.getElementById("next-btn").addEventListener("click", nextQuestion);
});

function showQuestion() {
  const q = shuffled[current];
  const card = document.getElementById("question-card");
  const feedback = document.getElementById("feedback");
  feedback.textContent = "";
  selectedAnswer = null;

  document.getElementById("verify-btn").style.display = "block";
  document.getElementById("next-btn").style.display = "none";

  let html = `<h2>${q.question}</h2>`;

  if (q.type === "truefalse") {
    html += `
      <div class="answers">
        <button class="ans-btn" onclick="selectAnswer(true)">Da</button>
        <button class="ans-btn" onclick="selectAnswer(false)">Nu</button>
      </div>`;
  } else if (q.type === "multiple") {
    html += `<div class="answers">`;
    q.options.forEach(opt => {
      html += `<button class="ans-btn" onclick="selectAnswer('${opt}')">${opt}</button>`;
    });
    html += `</div>`;
  } else if (q.type === "fill") {
    html += `<input type="text" id="fill-input" placeholder="Scrie rƒÉspunsul...">`;
  } else if (q.type === "audio") {
    // buton TTS
    html += `<button class="ans-btn" onclick="speakWord('${q.word}')">üîä AscultƒÉ</button>`;
    html += `<div class="answers">`;
    q.options.forEach(opt => {
      html += `<button class="ans-btn" onclick="selectAnswer('${opt}')">${opt}</button>`;
    });
    html += `</div>`;
  }

  document.getElementById("progress-text").textContent = `√éntrebarea ${current + 1} din ${shuffled.length}`;
  card.innerHTML = html;
}

function selectAnswer(value) {
  selectedAnswer = value;
  document.querySelectorAll(".ans-btn").forEach(btn => btn.classList.remove("selected"));
  event.target.classList.add("selected");
}

function verifyAnswer() {
  const q = shuffled[current];
  const feedback = document.getElementById("feedback");

  let correct = false;

  if (q.type === "fill") {
    const userInput = document.getElementById("fill-input").value.trim();
    correct = userInput.toLowerCase() === q.correct.toLowerCase();
  } else {
    correct = selectedAnswer == q.correct;
  }

  feedback.textContent = correct ? "‚úÖ Corect!" : `‚ùå Gre»ôit! RƒÉspuns corect: ${q.correct}`;
  feedback.style.color = correct ? "green" : "red";

  document.getElementById("verify-btn").style.display = "none";
  document.getElementById("next-btn").style.display = "block";
}

function nextQuestion() {
  current++;
  if (current < shuffled.length) {
    showQuestion();
  } else {
    document.getElementById("question-card").innerHTML = "<h2>üéâ Test terminat! FelicitƒÉri!</h2>";
    document.getElementById("feedback").textContent = "";
    document.querySelector(".test-controls").style.display = "none";
  }
}

function speakWord(word) {
  const utterance = new SpeechSynthesisUtterance(word);
  utterance.lang = "de-DE";
  speechSynthesis.speak(utterance);
}
